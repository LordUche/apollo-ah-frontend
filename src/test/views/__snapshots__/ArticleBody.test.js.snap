// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ArticleBody> should render without crashing when there are no tags 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <ArticleBody
        article={
          Object {
            "body": "body",
            "description": "description",
            "image": "image.jpg",
            "tagList": Array [],
            "title": "title",
          }
        }
        bookmarkArticle={[MockFunction]}
        bookmarked={false}
      >
        <div>
          <h1
            className="signle-title"
          >
            title
          </h1>
          <p
            className="single-sub"
            style={
              Object {
                "color": "#9c9c9c",
                "fontSize": 21,
                "fontWeight": "bold",
              }
            }
          >
            description
             
          </p>
          <div
            className="single__author__container"
          >
            <div
              className="article__author"
            >
              <div
                className="author__profile--mini"
              >
                <img
                  alt=""
                  src="image.jpg"
                />
                <div
                  className="author__profile--details"
                >
                  <h6>
                    Alexandra
                  </h6>
                  <span>
                    22 hrs ago
                  </span>
                  <span
                    className="article-author-dot"
                  />
                  <span>
                    4 min read
                  </span>
                </div>
              </div>
              <div
                className="bookmark__div"
              >
                <button
                  onClick={[MockFunction]}
                  type="button"
                >
                  <span
                    className="fas fa-bookmark transition "
                  />
                </button>
              </div>
            </div>
          </div>
          <div
            className="single-body"
          >
            body
          </div>
          <div
            className="single-tags text-center"
          />
          <div
            className="pg-empty-placeholder"
          />
          <div
            className="clap-grp"
          >
            <Connect(withRouter(ClapButton))>
              <withRouter(ClapButton)
                clapArticle={[Function]}
                isLoggedIn={false}
                loadUserClaps={[Function]}
                userClaps={0}
              >
                <Route>
                  <ClapButton
                    articleAuthorId={null}
                    articleClaps={0}
                    articleSlug=""
                    clapArticle={[Function]}
                    history={
                      Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                    isLoggedIn={false}
                    loadUserClaps={[Function]}
                    location={
                      Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      }
                    }
                    match={
                      Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      }
                    }
                    userClaps={0}
                    userId={null}
                  >
                    <span
                      className="clap-icon"
                    >
                      <button
                        className="btn"
                        onClick={[Function]}
                        type="button"
                      >
                        <img
                          alt=""
                          src={Object {}}
                        />
                      </button>
                      0
                       
                      claps
                    </span>
                  </ClapButton>
                </Route>
              </withRouter(ClapButton)>
            </Connect(withRouter(ClapButton))>
            <div
              className="share-grp"
            >
              <a
                className="text-danger"
                href="you"
              >
                <i
                  className="fas fa-envelope"
                />
              </a>
              <a
                className="text-primary"
                href="you"
              >
                <i
                  className="fab fa-facebook-square"
                />
              </a>
              <a
                className="text-white"
                href="you"
              >
                <i
                  className="fab fa-twitter-square text-info"
                />
              </a>
              <a
                className="text-muted"
                href="you"
              >
                <i
                  className="fas fa-bookmark"
                />
              </a>
              <a
                className="text-muted"
                href="you"
              >
                <i
                  className="fas fa-ellipsis-h"
                />
              </a>
            </div>
          </div>
          <div
            className="single-author-container single-article-author"
          >
            <div
              className="article-author"
            >
              <img
                alt=""
                src="image.jpg"
              />
              <div>
                <h6>
                  Alexandra
                </h6>
                <p>
                  Journalist, author, dad. Former TIME magazine editor and foreign correspondent. 
                </p>
                <button
                  className="btn btn-light"
                  type="button"
                >
                  Follow
                </button>
              </div>
            </div>
          </div>
        </div>
      </ArticleBody>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`<ArticleBody> should render without crashing when there are tags 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <ArticleBody
        article={
          Object {
            "body": "body",
            "description": "description",
            "image": "image.jpg",
            "tagList": Array [
              Object {
                "tagName": "tech",
              },
            ],
            "title": "title",
          }
        }
        bookmarkArticle={[MockFunction]}
        bookmarked={false}
      >
        <div>
          <h1
            className="signle-title"
          >
            title
          </h1>
          <p
            className="single-sub"
            style={
              Object {
                "color": "#9c9c9c",
                "fontSize": 21,
                "fontWeight": "bold",
              }
            }
          >
            description
             
          </p>
          <div
            className="single__author__container"
          >
            <div
              className="article__author"
            >
              <div
                className="author__profile--mini"
              >
                <img
                  alt=""
                  src="image.jpg"
                />
                <div
                  className="author__profile--details"
                >
                  <h6>
                    Alexandra
                  </h6>
                  <span>
                    22 hrs ago
                  </span>
                  <span
                    className="article-author-dot"
                  />
                  <span>
                    4 min read
                  </span>
                </div>
              </div>
              <div
                className="bookmark__div"
              >
                <button
                  onClick={[MockFunction]}
                  type="button"
                >
                  <span
                    className="fas fa-bookmark transition "
                  />
                </button>
              </div>
            </div>
          </div>
          <div
            className="single-body"
          >
            body
          </div>
          <div
            className="single-tags text-center"
          >
            <Tag
              key="tech"
              tag={
                Object {
                  "tagName": "tech",
                }
              }
            >
              <Link
                className="badge"
                replace={false}
                to="/search?tag=tech"
              >
                <a
                  className="badge"
                  href="/search?tag=tech"
                  onClick={[Function]}
                >
                  tech
                </a>
              </Link>
            </Tag>
          </div>
          <div
            className="pg-empty-placeholder"
          />
          <div
            className="clap-grp"
          >
            <Connect(withRouter(ClapButton))>
              <withRouter(ClapButton)
                clapArticle={[Function]}
                isLoggedIn={false}
                loadUserClaps={[Function]}
                userClaps={0}
              >
                <Route>
                  <ClapButton
                    articleAuthorId={null}
                    articleClaps={0}
                    articleSlug=""
                    clapArticle={[Function]}
                    history={
                      Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
                    }
                    isLoggedIn={false}
                    loadUserClaps={[Function]}
                    location={
                      Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      }
                    }
                    match={
                      Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      }
                    }
                    userClaps={0}
                    userId={null}
                  >
                    <span
                      className="clap-icon"
                    >
                      <button
                        className="btn"
                        onClick={[Function]}
                        type="button"
                      >
                        <img
                          alt=""
                          src={Object {}}
                        />
                      </button>
                      0
                       
                      claps
                    </span>
                  </ClapButton>
                </Route>
              </withRouter(ClapButton)>
            </Connect(withRouter(ClapButton))>
            <div
              className="share-grp"
            >
              <a
                className="text-danger"
                href="you"
              >
                <i
                  className="fas fa-envelope"
                />
              </a>
              <a
                className="text-primary"
                href="you"
              >
                <i
                  className="fab fa-facebook-square"
                />
              </a>
              <a
                className="text-white"
                href="you"
              >
                <i
                  className="fab fa-twitter-square text-info"
                />
              </a>
              <a
                className="text-muted"
                href="you"
              >
                <i
                  className="fas fa-bookmark"
                />
              </a>
              <a
                className="text-muted"
                href="you"
              >
                <i
                  className="fas fa-ellipsis-h"
                />
              </a>
            </div>
          </div>
          <div
            className="single-author-container single-article-author"
          >
            <div
              className="article-author"
            >
              <img
                alt=""
                src="image.jpg"
              />
              <div>
                <h6>
                  Alexandra
                </h6>
                <p>
                  Journalist, author, dad. Former TIME magazine editor and foreign correspondent. 
                </p>
                <button
                  className="btn btn-light"
                  type="button"
                >
                  Follow
                </button>
              </div>
            </div>
          </div>
        </div>
      </ArticleBody>
    </Router>
  </BrowserRouter>
</Provider>
`;
