// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EditProfileContainer> should render all children components 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(EditProfileContainer)
        activePage="PROFILE"
      >
        <EditProfileContainer
          activePage="PROFILE"
          isLoading={false}
          profile={
            Object {
              "bio": "I love writing",
              "errorData": Array [],
              "firstname": "John",
              "image": "http://linktoimage.jpg",
              "lastname": "Doe",
              "token": "encoded",
              "username": "johnny",
            }
          }
          updateProfile={[Function]}
        >
          <Connect(ProfileHeaderContainer)
            activePage="PROFILE"
          >
            <ProfileHeaderContainer
              activePage="PROFILE"
              isLoading={false}
              profile={
                Object {
                  "bio": "I love writing",
                  "errorData": Array [],
                  "firstname": "John",
                  "image": "http://linktoimage.jpg",
                  "lastname": "Doe",
                  "token": "encoded",
                  "username": "johnny",
                }
              }
              showLoader={[Function]}
              updateProfile={[Function]}
            >
              <ProfileHeader
                activePage="PROFILE"
                handleImageUpload={[Function]}
                isLoading={false}
                profile={
                  Object {
                    "bio": "I love writing",
                    "errorData": Array [],
                    "firstname": "John",
                    "image": "http://linktoimage.jpg",
                    "lastname": "Doe",
                    "token": "encoded",
                    "username": "johnny",
                  }
                }
              >
                <header
                  className="page-header"
                >
                  <h1>
                    My PROFILE
                  </h1>
                </header>
                <div
                  className="profile-box mt-n4"
                >
                  <div
                    className="d-inline-block relative profile-img-cover"
                  >
                    <span
                      className="spinner-border text-light align-middle"
                    />
                    <img
                      alt="johnny"
                      className="img-thumbnail"
                      src="http://linktoimage.jpg"
                    />
                    <button
                      className="btn change-image transition"
                      onClick={[Function]}
                      type="button"
                    >
                      <i
                        className="fas fa-camera"
                      />
                    </button>
                  </div>
                  <div
                    className="profile-wrapper"
                  >
                    <h4
                      className="profile-name text-capitalize"
                    >
                      John
                       
                      Doe
                    </h4>
                    <p
                      className="profile-username"
                    >
                      @johnny
                    </p>
                  </div>
                  <div
                    className="profile-footer"
                  >
                    <Link
                      className="btn false"
                      replace={false}
                      to="dashboard"
                    >
                      <a
                        className="btn false"
                        href="/dashboard"
                        onClick={[Function]}
                      >
                        <span
                          className="relative"
                        >
                          Dashboard
                        </span>
                      </a>
                    </Link>
                    <Link
                      className="btn active"
                      replace={false}
                      to="profile"
                    >
                      <a
                        className="btn active"
                        href="/profile"
                        onClick={[Function]}
                      >
                        <span
                          className="relative"
                        >
                          Edit profile
                        </span>
                      </a>
                    </Link>
                    <Link
                      className="btn false"
                      replace={false}
                      to="settings"
                    >
                      <a
                        className="btn false"
                        href="/settings"
                        onClick={[Function]}
                      >
                        <span
                          className="relative"
                        >
                          Settings
                        </span>
                      </a>
                    </Link>
                  </div>
                </div>
              </ProfileHeader>
            </ProfileHeaderContainer>
          </Connect(ProfileHeaderContainer)>
          <EditProfile
            handleUpdateProfile={[Function]}
            isLoading={false}
            profile={
              Object {
                "bio": "I love writing",
                "errorData": Array [],
                "firstname": "John",
                "image": "http://linktoimage.jpg",
                "lastname": "Doe",
                "token": "encoded",
                "username": "johnny",
              }
            }
          >
            <div
              className="card mb-5 mt-4"
            >
              <form
                className="form p-sm-4 p-3 "
                noValidate={true}
                onSubmit={[Function]}
              >
                <div
                  className="form-group mb-4"
                >
                  <label
                    className="font-weight-bold"
                    htmlFor="fname"
                  >
                    First Name
                  </label>
                  <input
                    className="form-control text-capitalize"
                    defaultValue="John"
                    id="fname"
                    name="firstname"
                    required={true}
                    type="text"
                  />
                  <span
                    className="text-danger"
                  >
                    First name is required.
                  </span>
                </div>
                <div
                  className="form-group mb-4"
                >
                  <label
                    className="font-weight-bold"
                    htmlFor="lname"
                  >
                    Last Name
                  </label>
                  <input
                    className="form-control text-capitalize"
                    defaultValue="Doe"
                    id="lname"
                    name="lastname"
                    required={true}
                    type="text"
                  />
                  <span
                    className="text-danger"
                  >
                    Last name is required.
                  </span>
                </div>
                <div
                  className="form-group mb-4"
                >
                  <label
                    className="font-weight-bold"
                    htmlFor="fname"
                  >
                    Username
                  </label>
                  <input
                    className="form-control"
                    defaultValue="johnny"
                    id="username"
                    name="username"
                    required={true}
                    type="text"
                  />
                  <span
                    className="text-danger"
                  >
                    Username is required.
                  </span>
                </div>
                <div
                  className="form-group mb-4"
                >
                  <label
                    className="font-weight-bold"
                    htmlFor="bio"
                  >
                    Bio
                  </label>
                  <textarea
                    className="form-control"
                    defaultValue="I love writing"
                    id="bio"
                    name="bio"
                    required={true}
                  />
                  <span
                    className="text-danger"
                  >
                    Bio is required.
                  </span>
                </div>
                <button
                  className="btn btn-brand btn-plain"
                  disabled={false}
                  type="submit"
                >
                  Update profile
                   
                </button>
                <input
                  className="hidden"
                  defaultValue="encoded"
                  name="token"
                  type="hidden"
                />
                <input
                  className="hidden"
                  defaultValue="http://linktoimage.jpg"
                  name="image"
                  type="hidden"
                />
              </form>
            </div>
          </EditProfile>
        </EditProfileContainer>
      </Connect(EditProfileContainer)>
    </Router>
  </BrowserRouter>
</Provider>
`;
